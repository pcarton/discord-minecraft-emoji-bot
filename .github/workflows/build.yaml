name: build image

on:
  push:
    branches:
      - master

jobs:
  make-new-release:
    runs-on: ubuntu-latest
    permissions:
      contents: 'write'
      pull-requests: 'read'
      id-token: 'write'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      version: ${{ steps.bump_release.outputs.version }}

    steps:
    - id: bump_release
      name: Bump Release
      uses: rymndhng/release-on-push-action@v0.28.0
      with:
        bump_version_scheme: ${{ github.actor == 'dependabot[bot]' && 'patch' || 'minor'  }}
        dry_run: false
        tag_prefix: ''
    - name: Check out the repo
      uses: actions/checkout@v4
    - name: "Update Cargo.toml"
      run: |
        sed -i.bak -e 's/^\s*version = "\{0,1\}[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*"\s*$/version = "${{ steps.bump_release.outputs.version }}"/g' Cargo.toml
    - name: Commit and push changes
      run: |
        git config --global user.name "pcarton"
        git config --global user.email "patrick.d.carton@gmail.com"
        git config advice.addIgnoredFile false
        git add Cargo.toml
        git commit -m "Update Cargo.toml"
        git push
  
  build-and-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      pull-requests: 'read'
      id-token: 'write'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GOOGLE_REGION: "us-central1"
      IMAGE_NAME: "cartonbot"
      SECRET_INJECTOR_IMAGE_NAME: "secret-injector"
      IMAGE_TAG: ${{ needs.make-new-release.outputs.version }}
      DEPLOYMENT_NAME: "cartonbot"
    needs: [make-new-release]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - id: 'auth'
      uses: 'google-github-actions/auth@v2.0.0'
      with:
        workload_identity_provider: "projects/1099089755819/locations/global/workloadIdentityPools/git-pool/providers/git-provider"
        service_account: 'svc-github-actions@pcarton-personal.iam.gserviceaccount.com'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2.0.0'

    - id: auth_docker
      name: "Auth Docker"
      run: |-
        gcloud auth configure-docker

    - id: build_image
      name: 'Build Bot Docker image to GCR'
      run: "gcloud builds submit --tag gcr.io/$GCLOUD_PROJECT/$IMAGE_NAME:$IMAGE_TAG"

    - id: retag_image_as_latest
      name: 'Tag image as latest'
      run: |-
        docker pull gcr.io/$GCLOUD_PROJECT/$IMAGE_NAME:$IMAGE_TAG
        docker tag gcr.io/$GCLOUD_PROJECT/$IMAGE_NAME:$IMAGE_TAG gcr.io/$GCLOUD_PROJECT/$IMAGE_NAME:latest
        docker push gcr.io/$GCLOUD_PROJECT/$IMAGE_NAME:latest

    - id: build_secret_injector_image
      name: 'Build Secret Injector Docker image to GCR'
      run: |-
        cd secret-injector/
        gcloud builds submit --tag gcr.io/$GCLOUD_PROJECT/$SECRET_INJECTOR_IMAGE_NAME:$IMAGE_TAG

    - id: retag_secret_injector_image_as_latest
      name: 'Tag image as latest'
      run: |-
        docker pull gcr.io/$GCLOUD_PROJECT/$SECRET_INJECTOR_IMAGE_NAME:$IMAGE_TAG
        docker tag gcr.io/$GCLOUD_PROJECT/$SECRET_INJECTOR_IMAGE_NAME:$IMAGE_TAG gcr.io/$GCLOUD_PROJECT/$SECRET_INJECTOR_IMAGE_NAME:latest
        docker push gcr.io/$GCLOUD_PROJECT/$SECRET_INJECTOR_IMAGE_NAME:latest

    # - id: set_up_kustomize
    #   name: Set up Kustomize
    #   run: |-
    #     curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
    #     chmod u+x ./kustomize
    #     mv ./kustomize ./kubernetes/

    # - id: setup_cluster_auth
    #   name: Setup Cluster Auth
    #   uses: google-github-actions/get-gke-credentials@v1.0.2
    #   with:
    #     cluster_name: "mettaur"
    #     location: "us-central1"

    # - id: deploy_gke
    #   name: Deploy to GKE
    #   run: |-
    #     cd kubernetes/
    #     ./kustomize edit set image cartonbot-app-image=gcr.io/$GCLOUD_PROJECT/$IMAGE_NAME:$IMAGE_TAG
    #     ./kustomize edit set image cartonbot-init-secrets-image=gcr.io/$GCLOUD_PROJECT/$SECRET_INJECTOR_IMAGE_NAME:$IMAGE_TAG
    #     ./kustomize build . | kubectl apply -f -
