name: build image

on:
  push:
    branches:
      - master

jobs:
  make-new-release:
    runs-on: ubuntu-latest
    permissions:
      contents: 'write'
      pull-requests: 'read'
      id-token: 'write'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      version: ${{ steps.bump_release.outputs.version }}

    steps:
    - id: bump_release
      name: Bump Release
      uses: rymndhng/release-on-push-action@v0.28.0
      with:
        bump_version_scheme: ${{ github.actor == 'dependabot[bot]' && 'patch' || 'minor'  }}
        dry_run: false
        tag_prefix: ''
    - name: Check out the repo
      uses: actions/checkout@v4
    - name: "Update Cargo.toml"
      run: |
        sed -i.bak -e 's/^\s*version = "\{0,1\}[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*"\s*$/version = "${{ steps.bump_release.outputs.version }}"/g' Cargo.toml
    - name: Commit and push changes
      run: |
        git config --global user.name "pcarton"
        git config --global user.email "patrick.d.carton@gmail.com"
        git config advice.addIgnoredFile false
        git add Cargo.toml
        git commit -m "Update Cargo.toml"
        git push

  build-cartonbot:
    uses: pcarton/github-actions/.github/workflows/docker-to-gar.yaml@v0.2.3
    with:
      google_artifact_registry: ${{ vars.GOOGLE_ARTIFACT_REGISTRY }}
      image_name: "cartonbot"
      image_tag: ${{ needs.make-new-release.outputs.version }}
      workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
      workload_identity_service_account: ${{ vars.GOOGLE_GHA_SERVICE_ACCOUNT }}
    secrets:
      input_github_token: ${{ secrets.GITHUB_TOKEN }}
    needs: [make-new-release]

  build-secret-injector:
    if: ${{ vars.METTAUR_CLUSTER_ENABLED }}
    uses: pcarton/github-actions/.github/workflows/docker-to-gar.yaml@v0.2.3
    with:
      google_artifact_registry: ${{ vars.GOOGLE_ARTIFACT_REGISTRY }}
      image_name: "secret-injector"
      image_tag: ${{ needs.make-new-release.outputs.version }}
      workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
      workload_identity_service_account: ${{ vars.GOOGLE_GHA_SERVICE_ACCOUNT }}
    secrets:
      input_github_token: ${{ secrets.GITHUB_TOKEN }}
    needs: [make-new-release]

  deploy-to-mettaur:
    if: ${{ vars.METTAUR_CLUSTER_ENABLED && github.actor != 'dependabot[bot]'}}
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      pull-requests: 'read'
      id-token: 'write'
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GOOGLE_REGION: "us-central1"
      GOOGLE_ARTIFACT_REGISTRY: "pcarton-internal-docker"
      IMAGE_NAME: "cartonbot"
      SECRET_INJECTOR_IMAGE_NAME: "secret-injector"
      IMAGE_TAG: ${{ needs.make-new-release.outputs.version }}
      DEPLOYMENT_NAME: "cartonbot"
    needs: [build-secret-injector,build-cartonbot]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - id: 'auth'
      uses: 'google-github-actions/auth@v2.1.0'
      with:
        workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ vars.GOOGLE_GHA_SERVICE_ACCOUNT }}

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2.1.0'

    - id: set_up_kustomize
      name: Set up Kustomize
      run: |-
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
        chmod u+x ./kustomize
        mv ./kustomize ./kubernetes/

    - id: setup_cluster_auth
      name: Setup Cluster Auth
      uses: google-github-actions/get-gke-credentials@v2.1.0
      with:
        cluster_name: "mettaur"
        location: "us-central1"

    - id: deploy_gke
      name: Deploy to GKE
      run: |-
        cd kubernetes/
        ./kustomize edit set image cartonbot-app-image=us-docker.pkg.dev/$GCLOUD_PROJECT/$GOOGLE_ARTIFACT_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
        ./kustomize edit set image cartonbot-init-secrets-image=us-docker.pkg.dev/$GCLOUD_PROJECT/$GOOGLE_ARTIFACT_REGISTRY/$SECRET_INJECTOR_IMAGE_NAME:$IMAGE_TAG
        ./kustomize build . | kubectl apply -f -
